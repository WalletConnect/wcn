name: validate

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        options: 
         - staging
         - dev
         - prod
        default: staging
      swiftBranch:
        description: 'The branch of WalletConnect/WalletConnectSwiftV2 to use for Swift tests'
        required: false
        default: main
        type: string
      flutterBranch:
        description: 'The branch of WalletConnect/WalletConnectFlutterV2 to use for Dart tests'
        required: false
        default: master
        type: string
      sharpBranch:
        description: 'The branch of WalletConnect/WalletConnectSharp to use for C# tests'
        required: false
        default: '2.0'
        type: string
      fastTrack:
        description: 'Run minimal set of tests (JS + Kotlin)'
        required: false
        default: false
        type: boolean
  workflow_call:
    inputs:
      environment:
        default: staging
        type: string
      swiftBranch:
        description: 'The branch of WalletConnect/WalletConnectSwiftV2 to use for Swift tests'
        required: false
        default: main
        type: string
      flutterBranch:
        description: 'The branch of WalletConnect/WalletConnectFlutterV2 to use for Dart tests'
        required: false
        default: master
        type: string
      sharpBranch:
        description: 'The branch of WalletConnect/WalletConnectSharp to use for C# tests'
        required: false
        default: '2.0'
        type: string
      fastTrack:
        description: 'Run minimal set of tests (JS + Kotlin)'
        required: false
        default: false
        type: boolean
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      TEST_PROJECT_ID:
        required: true
  # schedule:
  #   # * is a special character in YAML so you have to quote this string
  #   # Every 20mins
  #   - cron: '*/20 * * * *'

jobs:
  validate_js:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        endpoint: [
          "${{ inputs.environment }}.relay.walletconnect.com",
          "${{ inputs.environment }}.eu-central-1.relay.walletconnect.com",
          "${{ inputs.environment }}.us-east-1.relay.walletconnect.com",
          "${{ inputs.environment }}.ap-southeast-1.relay.walletconnect.com"]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: validate
        env:
          TEST_RELAY_URL: wss://${{ matrix.endpoint }}
          TEST_PROJECT_ID: ${{ secrets.TEST_PROJECT_ID }}
          DOCKER_PATH: ${{ steps.login-ecr.outputs.registry }}/sign-client:v2.0
        run: |
          docker pull $DOCKER_PATH
          docker run -e TEST_PROJECT_ID=${TEST_PROJECT_ID} -e TEST_RELAY_URL=${TEST_RELAY_URL} $DOCKER_PATH npm run test:ignoreUnhandled
          docker run -e TEST_PROJECT_ID=${TEST_PROJECT_ID} -e TEST_RELAY_URL=${TEST_RELAY_URL} $DOCKER_PATH npm run test:xregion
          docker run -e TEST_PROJECT_ID=${TEST_PROJECT_ID} -e TEST_RELAY_URL=${TEST_RELAY_URL} $DOCKER_PATH npm run test:lifecycle

  validate_kotlin:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        endpoint: [
          "${{ inputs.environment }}.relay.walletconnect.com",
          "${{ inputs.environment }}.eu-central-1.relay.walletconnect.com",
          "${{ inputs.environment }}.us-east-1.relay.walletconnect.com",
          "${{ inputs.environment }}.ap-southeast-1.relay.walletconnect.com"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: WalletConnect/WalletConnectKotlinV2

      - name: Run Relay CI
        env:
          TEST_RELAY_URL: wss://${{ matrix.endpoint }}
          TEST_PROJECT_ID: ${{ secrets.TEST_PROJECT_ID }}
        with:
          SECRETS_PROPERTIES: ${{ secrets.SECRETS_PROPERTIES }}
        uses: ./.github/actions/ci_relay

  validate_swift:
    # Ignore in fast-track mode when started manually
    if: ${{ github.event_name != 'workflow_dispatch' || !inputs.fastTrack }}
    runs-on: macos-latest-xlarge
    strategy:
      matrix:
        endpoint: ["${{ inputs.environment }}.relay.walletconnect.com"]
        test-type: [relay-tests, smoke-tests]
    steps:
    - uses: actions/checkout@v3
      with:
        repository: WalletConnect/WalletConnectSwiftV2
        ref: ${{ inputs.swiftBranch }}

    - name: Run Smoke Tests
      uses: ./.github/actions/run_tests_without_building
      with:
        type: ${{ matrix.test-type }}
        project-id: ${{ secrets.TEST_PROJECT_ID }}
        relay-endpoint: ${{ matrix.endpoint }}
        slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}

  validate_dart:
    # Ignore in fast-track mode when started manually
    if: ${{ github.event_name != 'workflow_dispatch' || !inputs.fastTrack }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [integration-tests]

    steps:
    - uses: actions/checkout@v3
      with:
        repository: WalletConnect/WalletConnectFlutterV2
        ref: ${{ inputs.flutterBranch }}

    - name: Install and set Flutter version
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'

    - uses: ./.github/actions/ci 
      with:
        type: ${{ matrix.test-type }}
        project-id: ${{ secrets.TEST_PROJECT_ID }}
        relay-endpoint: "wss://${{ inputs.environment }}.relay.walletconnect.com"

  validate_sharp:
    # Ignore in fast-track mode when started manually
    if: ${{ github.event_name != 'workflow_dispatch' || !inputs.fastTrack }}
    runs-on: ubuntu-latest
    # TODO: remove when we have confidence in Sharp tests
    continue-on-error: true
    strategy:
      matrix:
        test-type: [integration-tests]
    steps:
    - uses: actions/checkout@v3
      with:
        repository: WalletConnect/WalletConnectSharp
        ref: ${{ inputs.sharpBranch }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          8.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./
    - name: Build
      run: dotnet build --no-restore
      working-directory: ./
    - uses: ./.github/actions/ci
      with:
        type: ${{ matrix.test-type }}
        project-id: ${{ secrets.TEST_PROJECT_ID }}
        relay-endpoint: "wss://${{ inputs.environment }}.relay.walletconnect.com"
