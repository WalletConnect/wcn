name: ci_terraform
on:
  push:
    branches:
      - master
    paths:
      - "terraform/**"
  pull_request:
    paths:
      - "terraform/**"

concurrency:
  # Support push/pr as event types with different behaviors each:
  # 1. push: queue up builds
  # 2. pr: only allow one run per PR
  group: ${{ github.workflow }}-${{ github.event.type }}${{ github.event.pull_request.number }}
  # If there is already a workflow running for the same pull request, cancel it
  cancel-in-progress: ${{ github.event.type == 'PullRequest' }}

env:
  TF_VAR_ofac_countries: ${{ vars.OFAC_BLOCKED_COUNTRIES }}

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - id: fmt
        uses: WalletConnect/actions/actions/fmt-check-terraform@master

  plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment:
      name: infra/staging
      url: https://staging.relay.walletconnect.com/hello
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Run Terraform Plan
        id: plan
        uses: WalletConnect/actions/actions/plan-terraform@master
        env:
          TF_VAR_rpc_rate_limit_whitelist: ${{ secrets.RPC_RATE_LIMIT_WHITELIST }}
          TF_VAR_registry_api_auth_token: ${{ secrets.REGISTRY_API_AUTH_TOKEN }}
          TF_VAR_canary_project_id: ${{ secrets.TEST_PROJECT_ID }}
          TF_VAR_canary_project_id_irn: ${{ secrets.TEST_PROJECT_ID_IRN }}
          TF_VAR_ed25519_private_key: ${{ secrets.ED25519_PRIVATE_KEY }}
          TF_VAR_statuspage_api_key: ${{ secrets.STATUSPAGE_API_KEY }}
          TF_VAR_irn_node_ecr_image_tag: pr-${{ github.event.pull_request.number }}
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          environment: staging
          app-name: ${{ github.event.repository.name }}
      - uses: actions/upload-artifact@v3
        with:
          name: plan.tfplan
          path: ${{ steps.plan.outputs.plan-file }}
      - uses: actions/upload-artifact@v3
        with:
          name: plan.txt
          path: ${{ steps.plan.outputs.output-file }}
      - name: Add Plan to PR
        uses: actions/github-script@v6
        env:
          PLANFILE: ${{ steps.plan.outputs.output-file }}
#          PLAN: "terraform\n${{ steps.plan.outputs.plan }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { promises: fs } = require('fs');
  
            const MAX_LENGTH = 65535;
            const ellipsis = `\n...\n`;
  
            const prefix = `<details><summary>Show Plan</summary>

            \`\`\`\n
            `;
            const postfix = `
            \`\`\`

            </details>

            *Action: \`${{ github.event_name }}\`*`;
            
            let content = await fs.readFile(process.env.PLANFILE, 'utf8')
            let output = prefix + content + postfix;
  
            if (output.length > MAX_LENGTH) {
              let l = MAX_LENGTH - prefix.length - postfix.length - ellipsis.length;
              content = content.slice(0, l);
              output = prefix + content + ellipsis + postfix;
            }
  
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });


  kick-off-cd:
    needs: [fmt]
    if: github.event_name != 'pull_request'
    uses: ./.github/workflows/cd.yaml
    secrets: inherit
