name: deploy_full

on:
  workflow_dispatch:
    inputs:
      ecr_tag:
        description: 'The ECR tag to deploy e.g. 1.76.0 or pr-545'
        required: true
        type: string
      domain:
        description: 'The domain to deploy to dev/staging/prod'
        required: true
        default: staging
        type: string
      ref:
        description: 'The branch, tag or SHA to checkout. This affects the infra being deployed (terraform).'
        type: string
      force_deploy_irn:
        description: 'Force redeploy IRN'
        default: false
        type: boolean
      force_deploy_relay:
        description: 'Force redeploy relay'
        default: false
        type: boolean
  workflow_call:
    inputs:
      ecr_tag:
        required: true
        type: string
      domain:
        required: true
        type: string
      ref:
        type: string
      force_deploy_irn:
        default: false
        type: boolean
      force_deploy_relay:
        default: false
        type: boolean
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

concurrency: cd

env:
  TF_VAR_ofac_countries: ${{ vars.OFAC_BLOCKED_COUNTRIES }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: infra/${{ inputs.domain }}
      url: https://${{ inputs.domain }}.relay.walletconnect.com/hello
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ inputs.ref }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - uses: WalletConnect/actions/actions/deploy-terraform@master
        env:
          TF_VAR_rpc_rate_limit_whitelist: ${{ secrets.RPC_RATE_LIMIT_WHITELIST }}
          TF_VAR_registry_api_auth_token: ${{ secrets.REGISTRY_API_AUTH_TOKEN }}
          TF_VAR_canary_project_id: ${{ secrets.TEST_PROJECT_ID }}
          TF_VAR_canary_project_id_irn: ${{ secrets.TEST_PROJECT_ID_IRN }}
          TF_VAR_ed25519_private_key: ${{ secrets.ED25519_PRIVATE_KEY }}
          TF_VAR_ecr_app_version: ${{ inputs.ecr_tag }}
          TF_VAR_irn_node_ecr_image_tag: ${{ inputs.ecr_tag }}
          TF_VAR_statuspage_api_key: ${{ secrets.STATUSPAGE_API_KEY }}
          TF_CLI_ARGS_apply: -parallelism=30
          TF_VAR_irn_cache_buster: ${{ inputs.force_deploy_irn && format('{0}-{1}', github.run_id, github.run_attempt) || '' }}
          TF_VAR_relay_cache_buster: ${{ inputs.force_deploy_relay && format('{0}-{1}', github.run_id, github.run_attempt) || '' }}
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          environment: ${{ inputs.domain }}
          app-name: ${{ github.event.repository.name }}
