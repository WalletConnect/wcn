ARG BASE="rust:1.75-bullseye"
ARG RUNTIME="debian:bullseye-slim"
ARG WORK_DIR="/rs-relay"
ARG GIT_BRANCH="master"

#
# Install cargo-chef.
#
FROM ${BASE} AS chef
ARG WORK_DIR
RUN cargo install cargo-chef
WORKDIR ${WORK_DIR}

#
# Collect requirements.
#
FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

#
# Compile dependencies, so that they are cached as Docker layer.
#
FROM chef AS builder
ARG GIT_BRANCH
ARG WORK_DIR

# Configure system dependencies.
RUN apt update && \
  apt install -y  --no-install-recommends \
  gcc musl-dev musl-tools protobuf-compiler clang

# Build dependencies - this is the caching Docker layer!
COPY --from=planner ${WORK_DIR}/recipe.json recipe.json
RUN cargo chef cook --recipe-path recipe.json

# Build application
COPY . .
RUN git checkout ${GIT_BRANCH}
RUN cargo build

#
# Final image with executable.
#
FROM ${RUNTIME} AS runner
ARG WORK_DIR
WORKDIR ${WORK_DIR}
RUN apt-get update \
  && apt-get install -y --no-install-recommends ca-certificates libssl-dev \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*
COPY --from=builder ${WORK_DIR}/target/debug/relay /usr/local/bin/relay
USER 1001:1001
ENTRYPOINT ["/usr/local/bin/relay"]
