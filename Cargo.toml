[workspace]
resolver = "2"
members = ["crates/*"]


[profile.release]
lto = "fat"

[profile.release-lite]
inherits = "release"
lto = "thin"

[profile.release-debug]
inherits = "release"
lto = "thin"
debug = 1

[workspace.dependencies]
wc = { git = "https://github.com/WalletConnect/utils-rs.git", tag = "v0.14.1", default-features = false }
derive_more = { version = "1.0.0", features = [
    "display",
    "from",
    "as_ref",
    "display",
    "from",
    "try_into",
    "deref",
] }
derivative = "2"
derive-where = "1.5"
core = { package = "wcn_core", path = "crates/core" }
auth = { package = "wcn_auth", path = "crates/auth" }
domain = { package = "wcn_domain", path = "crates/domain" }
raft_api = { package = "wcn_raft_api", path = "crates/raft_api", features = [
    "server",
] }
storage_api = { package = "wcn_storage_api", path = "crates/storage_api", features = [
    "server",
] }
admin_api = { package = "wcn_admin_api", path = "crates/admin_api" }
client_api = { package = "wcn_client_api", path = "crates/client_api" }
migration_api = { package = "wcn_migration_api", path = "crates/migration_api" }
echo_api = { package = "wcn_echo_api", path = "crates/echo_api" }
pulse_api = { package = "wcn_pulse_api", path = "crates/pulse_api" }
pulse_monitor = { path = "crates/pulse_monitor" }
raft = { path = "crates/raft" }
wcn_rpc = { path = "crates/rpc" }
relay_rocks = { path = "crates/rocks" }
metrics = "0.23"
time = "0.3"
libp2p = { version = "0.55", default-features = false, features = ["serde"] }
tokio-serde = { git = "https://github.com/xDarksome/tokio-serde.git", rev = "6df9ff9" }
tokio-serde-postcard = { git = "https://github.com/xDarksome/tokio-serde-postcard.git", rev = "5e1b77a" }
postcard = { version = "1.0", default-features = false }
itertools = "0.12"
futures = "0.3"
backoff = { version = "0.4", features = ["tokio"] }
tracing = "0.1"
tokio-stream = "0.1"
strum = "0.27"

[workspace.lints.clippy]
all = { level = "deny", priority = -1 }
style = { level = "warn", priority = -1 }
absolute_paths = "warn"
bool_to_int_with_if = "warn"
clear_with_drain = "warn"
cloned_instead_of_copied = "warn"
collection_is_never_read = "warn"
empty_structs_with_brackets = "warn"
explicit_into_iter_loop = "warn"
filter_map_next = "warn"
implicit_clone = "warn"
implied_bounds_in_impls = "warn"
inconsistent_struct_constructor = "warn"
inefficient_to_string = "warn"
into_iter_without_iter = "warn"
iter_not_returning_iterator = "warn"
iter_with_drain = "warn"
manual_assert = "warn"
manual_instant_elapsed = "warn"
manual_string_new = "warn"
match_bool = "warn"
mem_forget = "warn"
mismatching_type_param_order = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
readonly_write_lock = "warn"
redundant_clone = "warn"
redundant_type_annotations = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
struct_excessive_bools = "warn"
trait_duplication_in_bounds = "warn"
type_repetition_in_bounds = "warn"
unnecessary_box_returns = "warn"
unnecessary_self_imports = "warn"
unused_peekable = "warn"
useless_let_if_seq = "warn"
