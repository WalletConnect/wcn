[package]
name = "wcn_cluster"
version = "0.1.0"
edition = "2021"
publish = false

[lints]
workspace = true

[features]
default = []
testing = []

[dependencies]
# Local
sharding = { path = "../sharding" }

# Derives
derive_more = { workspace = true, features = ["as_ref", "display", "from", "into", "try_from"] }
derive-where = { workspace = true }
thiserror = { workspace = true }

# General purpose
arc-swap = { workspace = true }
const-hex = { workspace = true }
tap = { workspace = true}
itertools = { workspace = true }
tracing = { workspace = true }

# Collections
indexmap = { workspace = true }
smallvec = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
postcard = { version = "1.0", default-features = false, features = ["alloc"] }

# Encryption
fpe = { version = "0.6", default-features = false, features = ["alloc"] }
aes = { version = "0.8", default-features = false }

# Async
futures = { workspace = true }
tokio = { workspace = true, features = ["time", "rt"] }
tokio-stream = { workspace = true }

# Domain specific
libp2p-identity = { workspace = true, features = ["serde"] }
xxhash-rust = { workspace = true }
multihash = { version = "0.19", default-features = false }
alloy = { workspace = true, features = [
    "contract",
    "signer-local",
    "reqwest",
    "provider-ws",
    "rpc-types",
] }

[dev-dependencies]
libp2p-identity = { workspace = true, features = ["rand"] }
proptest = "1"
wcn_cluster = { path = ".", features = ["testing"] }
alloy = { version = "1.0", default-features = false, features = [
    "provider-anvil-node",
    "node-bindings",
] }
tokio = { version = "1", default-features = false }

tracing-subscriber = { version = "0.3", features = [
    "env-filter",
    "parking_lot",
    "json",
] }
